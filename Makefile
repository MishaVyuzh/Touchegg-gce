#############################################################################
# Makefile for building: touchegg-gce
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Tue May 28 15:35:27 2013
# Project:  touchegg-gce.pro
# Template: app
# Command: $(QMAKE) -o Makefile touchegg-gce.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = gui.h \
		parser.h \
		general.h \
		button.h \
		lists.h \
		editdialog.h \
		memory.h \
		sendkeys.h \
		keylineedit.h \
		keylinguist.h \
		scribe.h \
		newgroupdialog.h \
		langselector.h
SOURCES = main.cpp \
		gui.cpp \
		parser.cpp \
		button.cpp \
		lists.cpp \
		editdialog.cpp \
		memory.cpp \
		sendkeys.cpp \
		keylineedit.cpp \
		keylinguist.cpp \
		scribe.cpp \
		newgroupdialog.cpp \
		langselector.cpp
OBJECTS = main.o \
		gui.o \
		parser.o \
		button.o \
		lists.o \
		editdialog.o \
		memory.o \
		sendkeys.o \
		keylineedit.o \
		keylinguist.o \
		scribe.o \
		newgroupdialog.o \
		langselector.o \
		gui.o \
		button.o \
		editdialog.o \
		sendkeys.o \
		newgroupdialog.o
FORMS = gui.ui \
		button.ui \
		editdialog.ui \
		sendkeys.ui \
		newgroupdialog.ui
UICDECLS = gui.h \
		button.h \
		editdialog.h \
		sendkeys.h \
		newgroupdialog.h
UICIMPLS = gui.cpp \
		button.cpp \
		editdialog.cpp \
		sendkeys.cpp \
		newgroupdialog.cpp
SRCMOC   = moc_gui.cpp \
		moc_button.cpp \
		moc_lists.cpp \
		moc_editdialog.cpp \
		moc_memory.cpp \
		moc_sendkeys.cpp \
		moc_keylineedit.cpp \
		moc_scribe.cpp \
		moc_newgroupdialog.cpp \
		moc_langselector.cpp \
		moc_gui.cpp \
		moc_button.cpp \
		moc_editdialog.cpp \
		moc_sendkeys.cpp \
		moc_newgroupdialog.cpp
OBJMOC = moc_gui.o \
		moc_button.o \
		moc_lists.o \
		moc_editdialog.o \
		moc_memory.o \
		moc_sendkeys.o \
		moc_keylineedit.o \
		moc_scribe.o \
		moc_newgroupdialog.o \
		moc_langselector.o \
		moc_gui.o \
		moc_button.o \
		moc_editdialog.o \
		moc_sendkeys.o \
		moc_newgroupdialog.o
DIST	   = touchegg-gce.pro
QMAKE_TARGET = touchegg-gce
DESTDIR  = 
TARGET   = touchegg-gce

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: touchegg-gce.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile touchegg-gce.pro
qmake: 
	@$(QMAKE) -o Makefile touchegg-gce.pro

dist: 
	@mkdir -p .tmp/touchegg-gce && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/touchegg-gce/ && $(COPY_FILE) --parents Dictionaries/it.ts Dictionaries/en.ts .tmp/touchegg-gce/ && ( cd `dirname .tmp/touchegg-gce` && $(TAR) touchegg-gce.tar touchegg-gce && $(GZIP) touchegg-gce.tar ) && $(MOVE) `dirname .tmp/touchegg-gce`/touchegg-gce.tar.gz . && $(DEL_FILE) -r .tmp/touchegg-gce

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp gui.h \
		langselector.h \
		parser.h \
		general.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

gui.o: gui.cpp gui.h \
		button.h \
		editdialog.h \
		parser.h \
		general.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		sendkeys.h \
		gui.h

parser.o: parser.cpp parser.h \
		general.h \
		lists.h \
		memory.h

button.o: button.cpp button.h \
		editdialog.h \
		gui.h \
		general.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		sendkeys.h \
		button.h

lists.o: lists.cpp lists.h

editdialog.o: editdialog.cpp editdialog.h \
		gui.h \
		button.h \
		general.h \
		sendkeys.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		editdialog.h

memory.o: memory.cpp memory.h \
		general.h \
		lists.h

sendkeys.o: sendkeys.cpp sendkeys.h \
		sendkeys.h

keylineedit.o: keylineedit.cpp keylineedit.h \
		keylinguist.h

keylinguist.o: keylinguist.cpp keylinguist.h

scribe.o: scribe.cpp scribe.h \
		general.h \
		lists.h \
		memory.h

newgroupdialog.o: newgroupdialog.cpp newgroupdialog.h \
		general.h \
		lists.h \
		memory.h \
		newgroupdialog.h

langselector.o: langselector.cpp langselector.h

gui.h: gui.ui 
	$(UIC) gui.ui -o gui.h

gui.cpp: gui.h gui.ui 
	$(UIC) gui.ui -i gui.h -o gui.cpp

button.h: button.ui 
	$(UIC) button.ui -o button.h

button.cpp: button.h button.ui 
	$(UIC) button.ui -i button.h -o button.cpp

editdialog.h: editdialog.ui 
	$(UIC) editdialog.ui -o editdialog.h

editdialog.cpp: editdialog.h editdialog.ui 
	$(UIC) editdialog.ui -i editdialog.h -o editdialog.cpp

sendkeys.h: sendkeys.ui keylineedit.h
	$(UIC) sendkeys.ui -o sendkeys.h

sendkeys.cpp: sendkeys.h sendkeys.ui keylineedit.h
	$(UIC) sendkeys.ui -i sendkeys.h -o sendkeys.cpp

newgroupdialog.h: newgroupdialog.ui 
	$(UIC) newgroupdialog.ui -o newgroupdialog.h

newgroupdialog.cpp: newgroupdialog.h newgroupdialog.ui 
	$(UIC) newgroupdialog.ui -i newgroupdialog.h -o newgroupdialog.cpp

gui.o: gui.cpp gui.h \
		button.h \
		editdialog.h \
		parser.h \
		general.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		sendkeys.h \
		gui.h

button.o: button.cpp button.h \
		editdialog.h \
		gui.h \
		general.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		sendkeys.h \
		button.h

editdialog.o: editdialog.cpp editdialog.h \
		gui.h \
		button.h \
		general.h \
		sendkeys.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h \
		editdialog.h

sendkeys.o: sendkeys.cpp sendkeys.h \
		sendkeys.h

newgroupdialog.o: newgroupdialog.cpp newgroupdialog.h \
		general.h \
		lists.h \
		memory.h \
		newgroupdialog.h

moc_gui.o: moc_gui.cpp  gui.h parser.h \
		general.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_button.o: moc_button.cpp  button.h gui.h \
		general.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_lists.o: moc_lists.cpp  lists.h 

moc_editdialog.o: moc_editdialog.cpp  editdialog.h button.h \
		general.h \
		sendkeys.h \
		gui.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_memory.o: moc_memory.cpp  memory.h general.h \
		lists.h

moc_sendkeys.o: moc_sendkeys.cpp  sendkeys.h 

moc_keylineedit.o: moc_keylineedit.cpp  keylineedit.h 

moc_scribe.o: moc_scribe.cpp  scribe.h general.h \
		lists.h \
		memory.h

moc_newgroupdialog.o: moc_newgroupdialog.cpp  newgroupdialog.h general.h \
		lists.h \
		memory.h

moc_langselector.o: moc_langselector.cpp  langselector.h 

moc_gui.o: moc_gui.cpp  gui.h parser.h \
		general.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_button.o: moc_button.cpp  button.h gui.h \
		general.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_editdialog.o: moc_editdialog.cpp  editdialog.h button.h \
		general.h \
		sendkeys.h \
		gui.h \
		parser.h \
		scribe.h \
		newgroupdialog.h \
		lists.h \
		memory.h

moc_sendkeys.o: moc_sendkeys.cpp  sendkeys.h 

moc_newgroupdialog.o: moc_newgroupdialog.cpp  newgroupdialog.h general.h \
		lists.h \
		memory.h

moc_gui.cpp: $(MOC) gui.h
	$(MOC) gui.h -o moc_gui.cpp

moc_button.cpp: $(MOC) button.h
	$(MOC) button.h -o moc_button.cpp

moc_lists.cpp: $(MOC) lists.h
	$(MOC) lists.h -o moc_lists.cpp

moc_editdialog.cpp: $(MOC) editdialog.h
	$(MOC) editdialog.h -o moc_editdialog.cpp

moc_memory.cpp: $(MOC) memory.h
	$(MOC) memory.h -o moc_memory.cpp

moc_sendkeys.cpp: $(MOC) sendkeys.h
	$(MOC) sendkeys.h -o moc_sendkeys.cpp

moc_keylineedit.cpp: $(MOC) keylineedit.h
	$(MOC) keylineedit.h -o moc_keylineedit.cpp

moc_scribe.cpp: $(MOC) scribe.h
	$(MOC) scribe.h -o moc_scribe.cpp

moc_newgroupdialog.cpp: $(MOC) newgroupdialog.h
	$(MOC) newgroupdialog.h -o moc_newgroupdialog.cpp

moc_langselector.cpp: $(MOC) langselector.h
	$(MOC) langselector.h -o moc_langselector.cpp

moc_gui.cpp: $(MOC) gui.h
	$(MOC) gui.h -o moc_gui.cpp

moc_button.cpp: $(MOC) button.h
	$(MOC) button.h -o moc_button.cpp

moc_editdialog.cpp: $(MOC) editdialog.h
	$(MOC) editdialog.h -o moc_editdialog.cpp

moc_sendkeys.cpp: $(MOC) sendkeys.h
	$(MOC) sendkeys.h -o moc_sendkeys.cpp

moc_newgroupdialog.cpp: $(MOC) newgroupdialog.h
	$(MOC) newgroupdialog.h -o moc_newgroupdialog.cpp

####### Install

install:  

uninstall:  

